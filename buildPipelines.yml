# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default
  demands:
    UnityBuildServer

jobs:
  - job: Prepare
    steps:
      - task: DeleteFiles@1
        displayName: 'Clean up old artifact'
        inputs:
          SourceFolder: '$(Build.ArtifactStagingDirectory)'
          Contents: '**/*'
      - task: DeleteFiles@1
        displayName: 'Delete old library'
        inputs:
          SourceFolder: '$(Build.Repository.LocalPath)\Library'
          Contents: '**/*'
      - task: CmdLine@2
        displayName: 'Restore library from the last bulid for performance'
        inputs:
          script: 'if EXIST "$(Build.BinariesDirectory)\Library\" move "$(Build.BinariesDirectory)\Library" "$(Build.Repository.LocalPath)\Library"'


  - job: BuildGameWindows
    # make sure Build process only run after Prepare Job finished
    dependsOn: ['Prepare']
    steps:
      - task: UnityBuildTask@3
        inputs:
          buildTarget: 'standalone'
          unityEditorsPathMode: 'unityHub'
          outputPath: '$(Build.BinariesDirectory)\Build'
          outputFileName: 'build'
      # secure the library for performance reasons
      - task: DeleteFiles@1
        displayName: 'Clean up some library'
        inputs:
          SourceFolder: '$(Build.BinariesDirectory)\Library'
          Contents: '**/*'
      - task: CmdLine@2
        displayName: 'Move to file over to be save for the next build'
        inputs:
          script: 'move "$(Build.Repository.LocalPath)\Library" "$(Build.BinariesDirectory)\Library"'
  - job: Publish
    dependsOn: ['BuildGameWindows']
    steps:
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)\Build'
          includeRootFolder: true
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)\demobuild.zip'
          replaceExistingArchive: true
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: 'cd "C:\Users\buildserver\Downloads\azcopy_windows_amd64_10.16.2\azcopy_windows_amd64_10.16.2"; .\azcopy copy "$(Build.ArtifactStagingDirectory)\demobuild.zip" "https://builddemoartifact.blob.core.windows.net/builddemo?sp=racwl&st=2022-12-01T13:12:25Z&se=2022-12-30T21:12:25Z&spr=https&sv=2021-06-08&sr=c&sig=Pbe2Kwr9Xv%2BeCtWWBn%2FXk1s8P9UO8gS3KYOqHgI9c0Y%3D"  --log-level=INFO --recursive'
